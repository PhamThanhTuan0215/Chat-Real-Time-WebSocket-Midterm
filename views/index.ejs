<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Real-time</title>
</head>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f5f5f5;
        font-size: 20px;
    }

    #messages {
        display: none;
        list-style-type: none;
        margin: 0;
        padding: 20px;
        background-color: #95c9c6;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 40px auto;
        max-height: 400px;
        min-height: 400px;
        overflow-y: auto;
    }

    #messages li {
        margin-bottom: 10px;
        padding: 10px;
        background-color: #e0e0e0;
        border-radius: 5px;
    }

    #messages .message-username {
        font-weight: bold;
    }

    #messages li:hover {
        background-color: #6b6dde;
        color: white;
    }

    #messages li.notification-join {
        color: white;
        background-color: #50cb7d;
        text-align: center;
    }

    #messages li.notification-left {
        color: #a94442;
        background-color: #f2dede;
        text-align: center;
    }

    #form {
        display: none;
        justify-content: center;
        align-items: center;
        padding: 20px;
        background-color: #b5d8d6;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 20px auto;
        margin-bottom: 1px;
    }

    #message-input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    button {
        padding: 10px;
        margin-left: 10px;
        background-color: #4caf50;
        color: #fff;
        border: none;
        border-radius: 3px;
        cursor: pointer;
    }

    #display-username {
        justify-content: center;
        background-color: #8ab5d5;
        display: block;
        margin-left: 29%;
        margin-right: 45%;
        border-radius: 5px;
        padding: 10px;
        text-align: center;
        display: none;
    }

    #submit-username-form {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        background-color: #b5d8d6;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 20px auto;
        margin-bottom: 1px;
    }

    #username-input {
        flex: 1;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    #user-list {
        position: fixed;
        background-color: #e0e0e0;
        border-radius: 5px;
        padding: 10px;
        margin: 20px;
        overflow-y: auto;
        top: 20px;
        max-width: 320px;
    }

    #users {
        list-style-type: none;
        padding: 0;
    }

    #users li {
        margin-bottom: 5px;
    }

    #users li.online {
        color: green;
    }

    #users li.offline {
        color: red;
    }

    #toggleUserList {
        position: fixed;
        top: 0px;
        left: 10px;
    }

    .chat-private-form {
        display: inline;
    }
</style>

<body>
    <ul id="messages"></ul>
    <form id="form" action="">
        <input id="message-input" placeholder="Enter your message" /><button>Send</button>
    </form>
    <div id="display-username">
        <Strong id="username">your name</Strong>
    </div>

    <div id="submit-username-form">
        <input value="<%= username %>" type="text" id="username-input" placeholder="Enter your username" />
        <button id="submit-username">OK</button>
    </div>

    <button id="toggleUserList">Hidden</button>
    <div id="user-list">
        <h2>Other Users</h2>
        <ul id="users"></ul>
    </div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.3/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>

    const socket = io()

    let username = undefined

    $(function () {
        const form = $('form')
        const input = $('#message-input')
        const messages = $('#messages')
        const users = $('#users');

        $(document).ready(function () {
            $('#submit-username').on('click', function () {
                const name = $('#username-input').val()

                if (!name) return

                socket.emit('user connected', name);
            })

            const summitUsernameBtn = $('#submit-username');
            if ($('#username-input').val() !== '') {
                summitUsernameBtn.click()
            }
        })

        form.submit(function (e) {
            e.preventDefault()
            if (input.val()) {
                socket.emit('chat message', input.val(), username)
                input.val('')
            }
            return false
        })

        socket.on('load messages', function (msgArray) {
            $.each(msgArray, function (index, msg) {
                const li = $('<li>')
                const usernameSpan = $('<span>').addClass('message-username').text(msg.username)
                const connectingSpan = $('<span>').addClass('message-content').text(': ')
                const msgSpan = $('<span>').text(msg.content)

                li.append(usernameSpan).append(connectingSpan).append(msgSpan)
                messages.append(li);
            });

            updatesSrollTop()
        });

        socket.on('chat message', function (username, msg) {
            const li = $('<li>')
            const usernameSpan = $('<span>').addClass('message-username').text(username);
            const connectingSpan = $('<span>').text(': ')
            const msgSpan = $('<span>').addClass('message-content').text(msg)

            li.append(usernameSpan).append(connectingSpan).append(msgSpan)
            messages.append(li)

            updatesSrollTop()
        });

        socket.on('update username', (newUsername) => {
            username = newUsername

            const displayUsername = $('#display-username')
            $('#username').text(username)

            $('#submit-username-form').css('display', 'none');
            displayUsername.css('display', 'flex');
            messages.css('display', 'block');
            form.css('display', 'flex');
            document.title = `Chat Real-time (${username})`

            updatesSrollTop()
        });

        socket.on('user connected', (user) => {
            const li = $('<li>').addClass('notification-join').text(`${user.username} joined the chat`)
            messages.append(li)

            updatesSrollTop()
        });

        socket.on('user disconnected', (user) => {
            const li = $('<li>').addClass('notification-left').text(`${user.username} left the chat`)
            messages.append(li)

            updatesSrollTop()
        });

        socket.on('update user list', (userList) => {
            users.empty();

            userList.forEach((user) => {
                if (user.username !== username) {
                    const li = $('<li>').text(user.username)

                    if (user.online) {
                        li.addClass('online')
                        var status = $('<span>').addClass('status').text(' (online)')
                        li.append(status)
                    } else {
                        li.addClass('offline')
                    }

                    var form = $('<form>').addClass('chat-private-form')
                    form.attr('action', '/private')
                    form.attr('method', 'post')

                    var button = $('<button>').addClass('toggleButton').text('Chat')

                    var hiddenInput1 = $('<input>').attr('type', 'hidden').attr('name', 'username1').val(username)
                    var hiddenInput2 = $('<input>').attr('type', 'hidden').attr('name', 'username2').val(user.username)

                    form.append(button).append(hiddenInput1).append(hiddenInput2)

                    if (username === undefined) {
                        form.css('display', 'none')
                    }

                    li.append(form)
                    users.append(li)
                }
            });
        });

        const toggleUserList = $('#toggleUserList')
        $('#toggleUserList').on('click', function () {
            $('#user-list').toggle();

            if (toggleUserList.text() === 'Hidden') {
                toggleUserList.text('Show')
            }
            else {
                toggleUserList.text('Hidden')
            }

        })

        function updatesSrollTop() {
            messages.scrollTop(messages.prop("scrollHeight"));
        }
    })
</script>

</html>